"""
Interface for vulnerability scanning functionality.
"""

from typing import List, Dict, Any, Awaitable
from security.vulnerability_scanner import VulnerabilityScanner
import logging

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class VulnerabilityScannerInterface:
    """Interface for vulnerability scanning functionality."""
    
    def __init__(self, scanner: VulnerabilityScanner):
        """Initialize the vulnerability scanner interface."""
        self.scanner = scanner
        
    async def scan(self, code: str, language: str) -> List[Dict[str, Any]]:
        """
        Scan code for vulnerabilities.
        
        Args:
            code: Source code to scan
            language: Programming language of the code
            
        Returns:
            List of detected vulnerabilities
        """
        try:
            return await self.scanner.scan(code, language)
        except Exception as e:
            logger.error(f"Error during vulnerability scan: {str(e)}")
            return []
